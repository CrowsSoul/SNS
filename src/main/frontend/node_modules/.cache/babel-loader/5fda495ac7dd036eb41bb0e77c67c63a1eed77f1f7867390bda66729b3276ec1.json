{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"@/utils/axios\";\nexport default {\n  name: \"BlogListView\",\n  data() {\n    return {\n      searchQuery: \"\",\n      dateFilter: \"all\",\n      authorFilter: \"\",\n      blogs: [],\n      currentPage: 1,\n      blogsPerPage: 3,\n      // 每页最多显示 3 篇博文\n      loading: true\n    };\n  },\n  computed: {\n    recommendedBlogs() {\n      return this.blogs.filter(blog => blog.isRecommended && blog.status !== \"pending\");\n    },\n    filteredBlogs() {\n      let filtered = this.blogs.filter(blog => blog.status !== \"pending\"); // 过滤掉审核中的博文\n\n      if (this.searchQuery) {\n        filtered = filtered.filter(blog => blog.title.includes(this.searchQuery));\n      }\n      if (this.dateFilter !== \"all\") {\n        const now = new Date();\n        filtered = filtered.filter(blog => {\n          const blogDate = new Date(blog.publishedAt);\n          if (this.dateFilter === \"7days\") {\n            return now - blogDate <= 7 * 24 * 60 * 60 * 1000;\n          } else if (this.dateFilter === \"1month\") {\n            return now - blogDate <= 30 * 24 * 60 * 60 * 1000;\n          } else if (this.dateFilter === \"6months\") {\n            return now - blogDate <= 6 * 30 * 24 * 60 * 60 * 1000;\n          } else if (this.dateFilter === \"2years\") {\n            return now - blogDate <= 2 * 365 * 24 * 60 * 60 * 1000;\n          }\n          return true;\n        });\n      }\n      if (this.authorFilter) {\n        filtered = filtered.filter(blog => blog.author.includes(this.authorFilter));\n      }\n      return filtered;\n    },\n    paginatedBlogs() {\n      const start = (this.currentPage - 1) * this.blogsPerPage;\n      const end = start + this.blogsPerPage;\n      return this.filteredBlogs.slice(start, end);\n    },\n    paginatedRecommendedBlogs() {\n      const start = (this.currentPage - 1) * this.blogsPerPage;\n      const end = start + this.blogsPerPage;\n      return this.recommendedBlogs.slice(start, end);\n    },\n    totalPages() {\n      if (!this.searchQuery && this.dateFilter === \"all\" && !this.authorFilter) {\n        return Math.ceil(this.recommendedBlogs.length / this.blogsPerPage);\n      }\n      return Math.ceil(this.filteredBlogs.length / this.blogsPerPage);\n    }\n  },\n  methods: {\n    async fetchBlogs() {\n      try {\n        const response = await axios.get(\"/blogs\");\n        this.blogs = response.data;\n      } catch (error) {\n        console.error(\"获取博文列表失败\", error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    applySearch() {\n      this.currentPage = 1;\n    },\n    applyFilters() {\n      this.currentPage = 1;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.updateRouteQuery();\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.updateRouteQuery();\n      }\n    },\n    updateRouteQuery() {\n      this.$router.push({\n        name: this.$route.name,\n        query: {\n          page: this.currentPage\n        }\n      });\n    }\n  },\n  created() {\n    const page = parseInt(this.$route.query.page, 10) || 1;\n    this.currentPage = page;\n    this.fetchBlogs();\n  },\n  watch: {\n    searchQuery() {\n      this.applySearch();\n    },\n    dateFilter() {\n      this.applyFilters();\n    },\n    authorFilter() {\n      this.applyFilters();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","dateFilter","authorFilter","blogs","currentPage","blogsPerPage","loading","computed","recommendedBlogs","filter","blog","isRecommended","status","filteredBlogs","filtered","title","includes","now","Date","blogDate","publishedAt","author","paginatedBlogs","start","end","slice","paginatedRecommendedBlogs","totalPages","Math","ceil","length","methods","fetchBlogs","response","get","error","console","applySearch","applyFilters","nextPage","updateRouteQuery","prevPage","$router","push","$route","query","page","created","parseInt","watch"],"sources":["D:\\Code\\Project\\SNSproject\\SNS\\src\\main\\frontend\\src\\views\\blog\\user\\BlogListView.vue"],"sourcesContent":["<template>\r\n  <div class=\"blog-list\">\r\n    <h1>博文展示</h1>\r\n    <div class=\"filters\">\r\n      <input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜索博文\" />\r\n      <button @click=\"applySearch\">搜索</button>\r\n    </div>\r\n    <div class=\"advanced-filters\">\r\n      <label for=\"dateFilter\">按日期筛选:</label>\r\n      <select id=\"dateFilter\" v-model=\"dateFilter\">\r\n        <option value=\"all\">无限制</option>\r\n        <option value=\"7days\">近7日</option>\r\n        <option value=\"1month\">近1个月</option>\r\n        <option value=\"6months\">近6个月</option>\r\n        <option value=\"2years\">近2年</option>\r\n      </select>\r\n\r\n      <label for=\"authorFilter\">按作者筛选:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"authorFilter\"\r\n        v-model=\"authorFilter\"\r\n        placeholder=\"输入作者姓名\"\r\n      />\r\n      <button @click=\"applyFilters\">应用筛选</button>\r\n    </div>\r\n    <ul v-if=\"filteredBlogs.length > 0\">\r\n      <li\r\n        v-if=\"!searchQuery && dateFilter === 'all' && !authorFilter\"\r\n        class=\"recommended-blogs\"\r\n      >\r\n        <h2>以下为推荐博文</h2>\r\n        <ul>\r\n          <li v-for=\"blog in paginatedRecommendedBlogs\" :key=\"blog.id\">\r\n            <h2>{{ blog.title }}</h2>\r\n            <p>作者: {{ blog.author }}</p>\r\n            <p>发布时间: {{ blog.publishedAt }}</p>\r\n            <router-link\r\n              :to=\"{\r\n                name: 'BlogDetail',\r\n                params: { id: blog.id },\r\n                query: { page: currentPage },\r\n              }\"\r\n              class=\"action-button\"\r\n              >查看详情</router-link\r\n            >\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li v-else v-for=\"blog in paginatedBlogs\" :key=\"blog.id\">\r\n        <h2>{{ blog.title }}</h2>\r\n        <p>作者: {{ blog.author }}</p>\r\n        <p>发布时间: {{ blog.publishedAt }}</p>\r\n        <router-link\r\n          :to=\"{\r\n            name: 'BlogDetail',\r\n            params: { id: blog.id },\r\n            query: { page: currentPage },\r\n          }\"\r\n          class=\"action-button\"\r\n          >查看详情</router-link\r\n        >\r\n      </li>\r\n    </ul>\r\n    <div v-else>\r\n      <p>没有相关结果...</p>\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">上一页</button>\r\n      <span>第 {{ currentPage }} 页，共 {{ totalPages }} 页</span>\r\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n        下一页\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"@/utils/axios\";\r\n\r\nexport default {\r\n  name: \"BlogListView\",\r\n  data() {\r\n    return {\r\n      searchQuery: \"\",\r\n      dateFilter: \"all\",\r\n      authorFilter: \"\",\r\n      blogs: [],\r\n      currentPage: 1,\r\n      blogsPerPage: 3, // 每页最多显示 3 篇博文\r\n      loading: true,\r\n    };\r\n  },\r\n  computed: {\r\n    recommendedBlogs() {\r\n      return this.blogs.filter(\r\n        (blog) => blog.isRecommended && blog.status !== \"pending\"\r\n      );\r\n    },\r\n    filteredBlogs() {\r\n      let filtered = this.blogs.filter((blog) => blog.status !== \"pending\"); // 过滤掉审核中的博文\r\n\r\n      if (this.searchQuery) {\r\n        filtered = filtered.filter((blog) =>\r\n          blog.title.includes(this.searchQuery)\r\n        );\r\n      }\r\n\r\n      if (this.dateFilter !== \"all\") {\r\n        const now = new Date();\r\n        filtered = filtered.filter((blog) => {\r\n          const blogDate = new Date(blog.publishedAt);\r\n          if (this.dateFilter === \"7days\") {\r\n            return now - blogDate <= 7 * 24 * 60 * 60 * 1000;\r\n          } else if (this.dateFilter === \"1month\") {\r\n            return now - blogDate <= 30 * 24 * 60 * 60 * 1000;\r\n          } else if (this.dateFilter === \"6months\") {\r\n            return now - blogDate <= 6 * 30 * 24 * 60 * 60 * 1000;\r\n          } else if (this.dateFilter === \"2years\") {\r\n            return now - blogDate <= 2 * 365 * 24 * 60 * 60 * 1000;\r\n          }\r\n          return true;\r\n        });\r\n      }\r\n\r\n      if (this.authorFilter) {\r\n        filtered = filtered.filter((blog) =>\r\n          blog.author.includes(this.authorFilter)\r\n        );\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n    paginatedBlogs() {\r\n      const start = (this.currentPage - 1) * this.blogsPerPage;\r\n      const end = start + this.blogsPerPage;\r\n      return this.filteredBlogs.slice(start, end);\r\n    },\r\n    paginatedRecommendedBlogs() {\r\n      const start = (this.currentPage - 1) * this.blogsPerPage;\r\n      const end = start + this.blogsPerPage;\r\n      return this.recommendedBlogs.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      if (\r\n        !this.searchQuery &&\r\n        this.dateFilter === \"all\" &&\r\n        !this.authorFilter\r\n      ) {\r\n        return Math.ceil(this.recommendedBlogs.length / this.blogsPerPage);\r\n      }\r\n      return Math.ceil(this.filteredBlogs.length / this.blogsPerPage);\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchBlogs() {\r\n      try {\r\n        const response = await axios.get(\"/blogs\");\r\n        this.blogs = response.data;\r\n      } catch (error) {\r\n        console.error(\"获取博文列表失败\", error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    applySearch() {\r\n      this.currentPage = 1;\r\n    },\r\n    applyFilters() {\r\n      this.currentPage = 1;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n        this.updateRouteQuery();\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n        this.updateRouteQuery();\r\n      }\r\n    },\r\n    updateRouteQuery() {\r\n      this.$router.push({\r\n        name: this.$route.name,\r\n        query: { page: this.currentPage },\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    const page = parseInt(this.$route.query.page, 10) || 1;\r\n    this.currentPage = page;\r\n    this.fetchBlogs();\r\n  },\r\n  watch: {\r\n    searchQuery() {\r\n      this.applySearch();\r\n    },\r\n    dateFilter() {\r\n      this.applyFilters();\r\n    },\r\n    authorFilter() {\r\n      this.applyFilters();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.blog-list {\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.filters,\r\n.advanced-filters {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center; /* 确保文本与输入框垂直居中对齐 */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters label,\r\n.advanced-filters label {\r\n  margin-right: 10px; /* 确保文本与输入框之间有足够的间距 */\r\n}\r\n\r\n.filters input,\r\n.advanced-filters input,\r\n.advanced-filters select {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  margin-right: 10px;\r\n}\r\n\r\n.filters button,\r\n.advanced-filters button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filters button:hover,\r\n.advanced-filters button:hover {\r\n  background-color: #358a66;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.recommended-blogs h2 {\r\n  margin-bottom: 20px; /* 添加这个行来增加间距 */\r\n}\r\n\r\nli {\r\n  background: white;\r\n  padding: 20px;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nli h2 {\r\n  margin: 0;\r\n}\r\n\r\nli p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.action-button {\r\n  padding: 10px 20px;\r\n  margin-right: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n  padding: 10px 20px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button:hover {\r\n  background-color: #358a66;\r\n}\r\n.filters button,\r\n.advanced-filters button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #f0ad4e; /* 黄色 */\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filters button:hover,\r\n.advanced-filters button:hover {\r\n  background-color: #ec971f; /* 较深的黄色，用于悬停状态 */\r\n}\r\n/* 单独为“应用筛选”按钮设置颜色 */\r\n.advanced-filters button {\r\n  background-color: #6f42c1; /* 紫色 */\r\n}\r\n\r\n.advanced-filters button:hover {\r\n  background-color: #5a2d91; /* 较深的紫色，用于悬停状态 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}