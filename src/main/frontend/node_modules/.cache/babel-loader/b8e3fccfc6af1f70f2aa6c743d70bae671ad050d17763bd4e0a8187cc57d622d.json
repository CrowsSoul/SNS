{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"@/utils/axios\";\nexport default {\n  name: \"MyBlogsView\",\n  data() {\n    return {\n      blogs: [],\n      currentPage: this.$route.query.page ? parseInt(this.$route.query.page) : 1,\n      blogsPerPage: 3,\n      // 每页最多显示 3 篇博文\n      showDeleteConfirm: false,\n      blogToDelete: null\n    };\n  },\n  computed: {\n    filteredBlogs() {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      if (user) {\n        return this.blogs.filter(blog => blog.author === user.nickname);\n      }\n      return [];\n    },\n    paginatedBlogs() {\n      const start = (this.currentPage - 1) * this.blogsPerPage;\n      const end = start + this.blogsPerPage;\n      return this.filteredBlogs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredBlogs.length / this.blogsPerPage);\n    }\n  },\n  methods: {\n    async fetchBlogs() {\n      try {\n        const response = await axios.get(\"/blogs\");\n        this.blogs = response.data;\n      } catch (error) {\n        console.error(\"获取博文列表失败\", error);\n      }\n    },\n    createNewBlog() {\n      this.$router.push({\n        name: \"BlogEditView\",\n        query: {\n          page: this.currentPage\n        }\n      });\n    },\n    editBlog(id) {\n      this.$router.push({\n        name: \"BlogEditView\",\n        params: {\n          id\n        },\n        query: {\n          page: this.currentPage\n        }\n      });\n    },\n    confirmDelete(id) {\n      this.showDeleteConfirm = true;\n      this.blogToDelete = id;\n    },\n    async deleteBlog() {\n      if (this.blogToDelete) {\n        try {\n          await axios.delete(`/blogs/${this.blogToDelete}`);\n          this.fetchBlogs().then(() => {\n            // 检查当前页是否还有文章\n            const currentPageBlogs = this.filteredBlogs.slice((this.currentPage - 1) * this.blogsPerPage, this.currentPage * this.blogsPerPage);\n            if (currentPageBlogs.length === 0 && this.currentPage > 1) {\n              this.currentPage--;\n            }\n          });\n        } catch (error) {\n          console.error(\"删除博文失败\", error);\n        } finally {\n          this.cancelDelete();\n        }\n      }\n    },\n    cancelDelete() {\n      this.showDeleteConfirm = false;\n      this.blogToDelete = null;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  },\n  created() {\n    this.fetchBlogs();\n  },\n  watch: {\n    $route(to, from) {\n      if (to.query.page) {\n        this.currentPage = parseInt(to.query.page);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","blogs","currentPage","$route","query","page","parseInt","blogsPerPage","showDeleteConfirm","blogToDelete","computed","filteredBlogs","user","JSON","parse","localStorage","getItem","filter","blog","author","nickname","paginatedBlogs","start","end","slice","totalPages","Math","ceil","length","methods","fetchBlogs","response","get","error","console","createNewBlog","$router","push","editBlog","id","params","confirmDelete","deleteBlog","delete","then","currentPageBlogs","cancelDelete","nextPage","prevPage","created","watch","to","from"],"sources":["D:\\Code\\JavaWorkspace\\my-sns\\src\\views\\blog\\user\\MyBlogsView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-blogs\">\r\n    <h1>我的博文</h1>\r\n    <div class=\"blog-list\">\r\n      <div v-if=\"filteredBlogs.length > 0\">\r\n        <ul>\r\n          <li v-for=\"blog in paginatedBlogs\" :key=\"blog.id\">\r\n            <h2>\r\n              {{ blog.title }}\r\n              <span\r\n                v-if=\"blog.status === 'pending'\"\r\n                class=\"status status-pending\"\r\n                >审核中</span\r\n              >\r\n              <span\r\n                v-if=\"blog.status === 'rejected'\"\r\n                class=\"status status-rejected\"\r\n                >未过审</span\r\n              >\r\n            </h2>\r\n            <p>作者: {{ blog.author }}</p>\r\n            <p>发布时间: {{ blog.publishedAt }}</p>\r\n            <router-link\r\n              :to=\"{\r\n                name: 'BlogDetail',\r\n                params: { id: blog.id },\r\n                query: { page: currentPage, fromMyBlogs: true },\r\n              }\"\r\n              class=\"action-button\"\r\n            >\r\n              查看详情\r\n            </router-link>\r\n            <button\r\n              @click=\"editBlog(blog.id)\"\r\n              class=\"action-button edit-button\"\r\n            >\r\n              编辑\r\n            </button>\r\n            <button\r\n              @click=\"confirmDelete(blog.id)\"\r\n              class=\"action-button delete-button\"\r\n            >\r\n              删除\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <button @click=\"createNewBlog\" class=\"new-blog-button\">\r\n          发表新博文\r\n        </button>\r\n        <div class=\"pagination\">\r\n          <button @click=\"prevPage\" :disabled=\"currentPage === 1\">\r\n            上一页\r\n          </button>\r\n          <span>第 {{ currentPage }} 页，共 {{ totalPages }} 页</span>\r\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n            下一页\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <p>没有相关博文...</p>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"showDeleteConfirm\" class=\"delete-confirm\">\r\n      <div class=\"delete-confirm-box\">\r\n        <p>是否确认删除？</p>\r\n        <div class=\"confirm-buttons\">\r\n          <button @click=\"deleteBlog\" class=\"confirm-button\">确认</button>\r\n          <button @click=\"cancelDelete\" class=\"cancel-button\">取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"@/utils/axios\";\r\n\r\nexport default {\r\n  name: \"MyBlogsView\",\r\n  data() {\r\n    return {\r\n      blogs: [],\r\n      currentPage: this.$route.query.page\r\n        ? parseInt(this.$route.query.page)\r\n        : 1,\r\n      blogsPerPage: 3, // 每页最多显示 3 篇博文\r\n      showDeleteConfirm: false,\r\n      blogToDelete: null,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredBlogs() {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (user) {\r\n        return this.blogs.filter((blog) => blog.author === user.nickname);\r\n      }\r\n      return [];\r\n    },\r\n    paginatedBlogs() {\r\n      const start = (this.currentPage - 1) * this.blogsPerPage;\r\n      const end = start + this.blogsPerPage;\r\n      return this.filteredBlogs.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredBlogs.length / this.blogsPerPage);\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchBlogs() {\r\n      try {\r\n        const response = await axios.get(\"/blogs\");\r\n        this.blogs = response.data;\r\n      } catch (error) {\r\n        console.error(\"获取博文列表失败\", error);\r\n      }\r\n    },\r\n    createNewBlog() {\r\n      this.$router.push({\r\n        name: \"BlogEditView\",\r\n        query: { page: this.currentPage },\r\n      });\r\n    },\r\n    editBlog(id) {\r\n      this.$router.push({\r\n        name: \"BlogEditView\",\r\n        params: { id },\r\n        query: { page: this.currentPage },\r\n      });\r\n    },\r\n    confirmDelete(id) {\r\n      this.showDeleteConfirm = true;\r\n      this.blogToDelete = id;\r\n    },\r\n    async deleteBlog() {\r\n      if (this.blogToDelete) {\r\n        try {\r\n          await axios.delete(`/blogs/${this.blogToDelete}`);\r\n          this.fetchBlogs().then(() => {\r\n            // 检查当前页是否还有文章\r\n            const currentPageBlogs = this.filteredBlogs.slice(\r\n              (this.currentPage - 1) * this.blogsPerPage,\r\n              this.currentPage * this.blogsPerPage\r\n            );\r\n            if (currentPageBlogs.length === 0 && this.currentPage > 1) {\r\n              this.currentPage--;\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"删除博文失败\", error);\r\n        } finally {\r\n          this.cancelDelete();\r\n        }\r\n      }\r\n    },\r\n    cancelDelete() {\r\n      this.showDeleteConfirm = false;\r\n      this.blogToDelete = null;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchBlogs();\r\n  },\r\n  watch: {\r\n    $route(to, from) {\r\n      if (to.query.page) {\r\n        this.currentPage = parseInt(to.query.page);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-blogs {\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.blog-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.blog-list li {\r\n  background: white;\r\n  padding: 20px;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.blog-list li h2 {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.blog-list li h2 .status {\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  color: white;\r\n}\r\n\r\n.status-pending {\r\n  background-color: #f0ad4e;\r\n}\r\n\r\n.status-rejected {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.blog-list li p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.action-button {\r\n  padding: 10px 20px;\r\n  margin-right: 10px;\r\n  background-color: #1c7dbd;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.new-blog-button {\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 15px 30px;\r\n  font-size: 18px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.new-blog-button:hover {\r\n  background-color: #358a66;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n  padding: 10px 20px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button:hover {\r\n  background-color: #358a66;\r\n}\r\n\r\n.delete-confirm {\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.delete-confirm-box {\r\n  background: #2c3e50;\r\n  padding: 20px;\r\n  border-radius: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.confirm-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.confirm-button,\r\n.cancel-button {\r\n  margin: 0 10px;\r\n  padding: 10px 20px;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.confirm-button:hover,\r\n.cancel-button:hover {\r\n  background-color: #358a66;\r\n}\r\n/* 编辑按钮 */\r\n.edit-button {\r\n  background-color: #f0ad4e; /* 黄色 */\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #ec971f; /* 较深的黄色，用于悬停状态 */\r\n}\r\n\r\n/* 删除按钮 */\r\n.delete-button {\r\n  background-color: #d9534f; /* 红色 */\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #c9302c; /* 较深的红色，用于悬停状态 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}